// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = "1.4.0"
    repositories {
        google()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // Check for v3.1.2 or higher
        classpath "com.google.gms:google-services:4.3.3"  // Google Services plugin

        // Add the Firebase Crashlytics Gradle plugin.
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'

        // Google Play Publisher plugin
        classpath 'com.github.triplet.gradle:play-publisher:3.1.0-SNAPSHOT'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    ext {
        referenceVersionCode = 10
        referenceVersionName = "1.0.1"

        getCustomVersionCode = { referenceVersionCode ->
            def referenceVersionMultiplier = 10000
            def finalVersionCode = referenceVersionCode * referenceVersionMultiplier
            def bitriseBuild = System.getenv()["BITRISE_BUILD"]

            if (bitriseBuild) {
                def bitriseBuildNumber = System.getenv()["BITRISE_BUILD_NUMBER"]
                finalVersionCode = finalVersionCode + Integer.valueOf(bitriseBuildNumber)
            }
            return finalVersionCode
        }

        getCustomVersionName = { referenceVersionName ->
            def finalVersionName = referenceVersionName
            def bitriseBuild = System.getenv()["BITRISE_BUILD"]

            if (bitriseBuild) {
                def bitriseBuildNumber = System.getenv()["BITRISE_BUILD_NUMBER"]
                finalVersionName = finalVersionName + "." + bitriseBuildNumber
            } else {
                finalVersionName = finalVersionName
            }
            return finalVersionName
        }

        final def maps_version = "17.0.0"
        final def retrofit_version = "2.6.3"
        final def loginInterceptor_version = "4.2.1"
        final def coroutines_version = "1.3.7"
        final def splitties_version = "3.0.0-alpha06"
        final def lifecycle_version = "2.2.0"
        final def navComponent_version = "2.1.0"
        final def glide_version = "4.11.0"
        final def work_manager = "2.4.0"

        androidLibs = [
                appcompat             : "androidx.appcompat:appcompat:1.2.0",
                androidxcore          : "androidx.core:core-ktx:1.3.1",
                location              : "com.google.android.gms:play-services-location:$maps_version",
                playServices          : "com.google.android.gms:play-services-maps:$maps_version",
                constraintLayout      : "androidx.constraintlayout:constraintlayout:2.0.1",
                material              : "com.google.android.material:material:1.3.0-alpha02",
                recyclerview          : 'androidx.recyclerview:recyclerview:1.0.0',
                viewmodel             : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
                livedata              : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
                swipeRefreshLayout    : "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0",
                navigationCompFragment: "androidx.navigation:navigation-fragment-ktx:$navComponent_version",
                navigationCompUi      : "androidx.navigation:navigation-ui-ktx:$navComponent_version",
                workManager           : "androidx.work:work-runtime-ktx:$work_manager",

                // For Image Intent chooser extension functions
                activityKtx           : "androidx.activity:activity-ktx:1.2.0-alpha06",
                fragmentKtx           : "androidx.fragment:fragment:1.3.0-alpha06"
        ]

        kotlinLibs = [
                stdlib    : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
        ]

        networkLibs = [
                okhttpLoginInterceptor: "com.squareup.okhttp3:logging-interceptor:$loginInterceptor_version",
                retrofit              : "com.squareup.retrofit2:retrofit:$retrofit_version",
                retrofitGsonConverter : "com.squareup.retrofit2:converter-gson:$retrofit_version",
                curlInterceptor       : "com.github.mrmike:ok2curl:0.5.0"
        ]

        firebaseLibs = [
                firebaseCore     : "com.google.firebase:firebase-core:17.5.0",
                firebaseDatabase : "com.google.firebase:firebase-database:19.4.0",
                firebaseMessaging: "com.google.firebase:firebase-messaging:21.0.0"
        ]

        imageLibs = [
                glide   : "com.github.bumptech.glide:glide:$glide_version",
                cropView: "com.github.takusemba:cropme:2.0.7"
        ]

        miscLibs = [
                takusemba: "com.github.takusemba:spotlight:2.0.3"
        ]

        libs = [
                firebaseCrashlytics: "com.google.firebase:firebase-crashlytics:17.2.1",
                googleAnalytics    : "com.google.firebase:firebase-analytics:17.5.0",
                //splitties  : "com.louiscad.splitties:splitties-activities:$splitties_version",
                dexter             : "com.karumi:dexter:6.0.2",
                dagger             : "com.google.dagger:dagger:2.26",
        ]

        kaptLibs = [
                dagger: "com.google.dagger:dagger-compiler:2.26",
                glide : "com.github.bumptech.glide:compiler:$glide_version"
        ]

        testLibs = [
                junit: "junit:junit:4.12"
        ]

        androidTestLibs = [
                extJunit: "androidx.test.ext:junit:1.1.1"
        ]
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
