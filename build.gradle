// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = "1.3.70"
    repositories {
        google()
        jcenter()
        maven {
            url "https://maven.fabric.io/public"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // Check for v3.1.2 or higher
        classpath "com.google.gms:google-services:4.3.3"  // Google Services plugin

        // Add dependency
        classpath "io.fabric.tools:gradle:1.31.2"  // Crashlytics plugin
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    ext {
        referenceVersionCode = 1
        referenceVersionName = "1.0.0"

        getCustomVersionCode = { referenceVersionCode ->
            def referenceVersionMultiplier = 10000
            def finalVersionCode = referenceVersionCode * referenceVersionMultiplier
            def bitriseBuild = System.getenv()["BITRISE_BUILD"]

            if (bitriseBuild) {
                def bitriseBuildNumber = System.getenv()["BITRISE_BUILD_NUMBER"]
                finalVersionCode = finalVersionCode + Integer.valueOf(bitriseBuildNumber)
            }
            return finalVersionCode
        }

        getCustomVersionName = { referenceVersionName ->
            def finalVersionName = referenceVersionName
            def bitriseBuild = System.getenv()["BITRISE_BUILD"]

            if (bitriseBuild) {
                def bitriseBuildNumber = System.getenv()["BITRISE_BUILD_NUMBER"]
                finalVersionName = finalVersionName + "." + bitriseBuildNumber
            } else {
                finalVersionName = finalVersionName + ".LOCAL"
            }
            return finalVersionName
        }

        final def maps_version = "17.0.0"
        final def retrofit_version = "2.6.3"
        final def loginInterceptor_version = "4.2.1"
        final def coroutines_version = "1.3.3"
        final def splitties_version = "3.0.0-alpha06"

        androidLibs = [
                appcompat       : "androidx.appcompat:appcompat:1.1.0",
                androidxcore    : "androidx.core:core-ktx:1.1.0",
                playServices    : "com.google.android.gms:play-services-maps:$maps_version",
                constraintLayout: "androidx.constraintlayout:constraintlayout:1.1.3",
                material        : "com.google.android.material:material:1.2.0-alpha03",
                recyclerview    : 'androidx.recyclerview:recyclerview:1.0.0'
        ]

        kotlinLibs = [
                stdlib    : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
        ]

        networkLibs = [
                okhttpLoginInterceptor: "com.squareup.okhttp3:logging-interceptor:$loginInterceptor_version",
                retrofit              : "com.squareup.retrofit2:retrofit:$retrofit_version",
                retrofitGsonConverter : "com.squareup.retrofit2:converter-gson:$retrofit_version",
                curlInterceptor       : "com.github.mrmike:ok2curl:0.5.0"
        ]

        libs = [
                crashlytics: "com.crashlytics.sdk.android:crashlytics:2.10.1",
                analytics  : "com.google.firebase:firebase-analytics:17.2.1",
                splitties  : "com.louiscad.splitties:splitties-activities:$splitties_version",
                dexter     : "com.karumi:dexter:6.0.2"
        ]

        testLibs = [
                junit: "junit:junit:4.12"
        ]

        androidTestLibs = [
                extJunit: "androidx.test.ext:junit:1.1.1",
                espress : "androidx.test.espresso:espresso-core:3.2.0"
        ]
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
